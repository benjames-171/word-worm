local data = require ("main.data")

local function disablenode (self, node)
	gui.set_enabled(node, false)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.node = gui.get_node("container")
	gui.set_enabled(self.node, false)
	gui.set_position(self.node, vmath.vector3(320, 400, 0))
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(320, 480, 0), gui.EASING_INOUTQUAD, 0.5)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.5)
	data.state = data.STATE_CONTROLS
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(320, 400, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.5)
end

function on_input(self, action_id, action)
	if data.state == data.STATE_CREDITS then
		if action_id == hash("click") then
			if gui.pick_node(gui.get_node("button"), action.x, action.y) and action.pressed then
				hide(self)
				msg.post("#menu", "show", {})
			end
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then show(self)
	end
end